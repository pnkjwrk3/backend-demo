"""Initial revision

Revision ID: 37f6db527e0b
Revises: 
Create Date: 2024-07-02 01:56:44.653317

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '37f6db527e0b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('CREATE SCHEMA IF NOT EXISTS playlist')
    op.create_table('songs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('danceability', sa.Float(), nullable=True),
    sa.Column('energy', sa.Float(), nullable=True),
    sa.Column('key', sa.Integer(), nullable=True),
    sa.Column('loudness', sa.Float(), nullable=True),
    sa.Column('mode', sa.Integer(), nullable=True),
    sa.Column('acousticness', sa.Float(), nullable=True),
    sa.Column('instrumentalness', sa.Float(), nullable=True),
    sa.Column('liveness', sa.Float(), nullable=True),
    sa.Column('valence', sa.Float(), nullable=True),
    sa.Column('tempo', sa.Float(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('time_signature', sa.Integer(), nullable=True),
    sa.Column('num_bars', sa.Integer(), nullable=True),
    sa.Column('num_sections', sa.Integer(), nullable=True),
    sa.Column('num_segments', sa.Integer(), nullable=True),
    sa.Column('class', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('rating_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='playlist'
    )
    op.create_index(op.f('ix_playlist_songs_title'), 'songs', ['title'], unique=False, schema='playlist')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_playlist_songs_title'), table_name='songs', schema='playlist')
    op.drop_table('songs', schema='playlist')
    op.execute('DROP SCHEMA IF EXISTS playlist RESTRICT')
    # ### end Alembic commands ###
